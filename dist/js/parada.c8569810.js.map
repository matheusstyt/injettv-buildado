{"version":3,"file":"js/parada.c8569810.js","mappings":"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","sources":["webpack://injettv-vue/./src/views/ParadasView.vue","webpack://injettv-vue/./src/views/ParadasView.vue?38ec"],"sourcesContent":["<template>\r\n    <div class=\"paradas\">\r\n      <h1 class=center-align>Paradas | Alertas - {{ galpaoName }}</h1>\r\n        <!-- {{ info }} -->\r\n        <div class=\"container\">\r\n            <table class=\"flex\">\r\n                <tr>\r\n                    <th>MÁQUINA</th>\r\n                    <th>DESCRIÇÃO</th>\r\n                    <th>DURAÇÃO (HH:MM:SS)</th>\r\n                </tr>\r\n                <tr class=\"teste\" id=\"circle1\" v-for=\"(pt, index) in pts\" >\r\n                    <td :style=color+pt.cor><b>{{ pt.cdPt}}</b></td>\r\n                    <td :style=color+pt.cor><b>{{ pt.descricao}}</b></td>\r\n                    <td :style=color+pt.cor><b>{{ pt.tempo}}</b></td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n          <div >\r\n            <h2 class=\"ultima-atualizacao\">Ultima atualizacão: {{ ultimaAtualizacao }}</h2>\r\n          </div>\r\n         \r\n    </div>\r\n  \r\n    </template>\r\n  <script>\r\n  import '../css/paradas.css'\r\n  import axios from 'axios'\r\n  export default {\r\n      name: 'Maquinas',\r\n    components: {\r\n          \r\n    },\r\n    created () {\r\n        //this.carousel()\r\n        // setInterval(() => {\r\n        //     if(sessionStorage.getItem('produtividade') == 'true'){\r\n        //         window.location.href = '/produtividade'\r\n        //     }\r\n        //     if(sessionStorage.getItem('maquinas') == 'true'){\r\n        //         window.location.href = '/maquinas'\r\n        //     }\r\n            \r\n        //     this.getParadas()      \r\n        // }, 15000)\r\n    },\r\n    data(){\r\n        return{\r\n            errorF(error){\r\n                sessionStorage.setItem('error', error)\r\n                window.location.href = '/error'\r\n            },\r\n            ultimaAtualizacao : null,\r\n            ip : require('/src/config/config.env').API_URL,\r\n            galpaoName : sessionStorage.getItem('galpaoName'),\r\n            cd :'000001',\r\n            color: 'color: ',\r\n            pts: null,\r\n            info: null,\r\n            turno : null,\r\n            maquinas : undefined,\r\n            legendaColors1 : [\r\n                {nome:'Parada', color: '#c0392b'},\r\n                {nome:'Na Meta', color: '#4cd137'},\r\n                {nome:'Fora da Meta', color: '#f1c40f'},\r\n                {nome:'Offline', color: 'rgb(135, 135, 135)'}\r\n                    ],\r\n            legendaColors2 : [\r\n                {nome:'Em Alerta', color: '#f1c40f'},\r\n                {nome:'Sem Planejamento', color: 'blue'},\r\n                {nome:'90% Op Concluída', color: 'rgb(27, 26, 90)'},\r\n                {nome:'Planejamneto Concluído', color: 'rgb(45, 238, 235)'},\r\n                {nome:'Índice de Refugo Maior que 5%', color: 'rgb(142, 142, 142)'},\r\n                {nome:'Parada sem Peso na Eficiência', color: 'rgb(235, 23, 192)'},\r\n                {nome:'Parada não Informada', color: 'rgb(0, 0, 0)'},\r\n                {nome:'CIP(Controle Início Processo)', color: 'rgb(115, 239, 111)'},\r\n                {nome:'Sem Ocorrências', color: '#ffff'}\r\n            ]\r\n        }\r\n    },\r\n      methods:{\r\n\r\n        getToday(){\r\n            var today = new Date();\r\n            var dd = String(today.getDate()).padStart(2, '0');\r\n            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n            var yyyy = today.getFullYear();\r\n            var h = String(today.getHours());\r\n            var m = String(today.getMinutes());\r\n            var s = String(today.getSeconds());\r\n            if(h.length == 1){\r\n                h = '0'+h;\r\n            }\r\n            if(m.length == 1){\r\n                m = '0'+m;\r\n            }\r\n            if(s.length == 1){\r\n                s = '0'+s;\r\n            }\r\n            today = dd + '/' + mm + '/' + yyyy + \"  \" + h+\":\"+m+\":\"+s;\r\n\r\n            \r\n            return today;\r\n        },\r\n          async getParadas(){\r\n      \r\n              this.ultimaAtualizacao = this.getToday()\r\n              await axios.all([        \r\n                  axios.get(`${this.ip}/idw/rest/injet/paradas/pesquisaParadasByGalpao` ,{params: {cdGalpao:this.cd}}),\r\n                  axios.get(`${this.ip}/idw/rest/injet/alertas/pesquisaAlertasByGalpao`,{params: {cdGalpao:this.cd}})\r\n              ])\r\n              .then(\r\n                    axios.spread((paradas, alertas) => {\r\n\r\n                    let alerta = [], parada = [], pts = [], pts_ = [];\r\n                    \r\n                    // FORMATANDO O HORÁRIO\r\n                    let formatado = '';\r\n                    let hora;\r\n                    for (var par = 0; par < paradas.data.paradasGalpao.length;par++ ){\r\n                        let tempoFormatado = paradas.data.paradasGalpao[par].tempoParado.split(\":\");\r\n                        // // SEPARANDO DIAS E HORAS\r\n                        \r\n                        // console.log(Number(tempoFormatado[0]))\r\n                        // let dias = Number(tempoFormatado[0]) / 24;\r\n                        // dias = dias.toFixed(10)\r\n                        \r\n                        // let arrDias = String(dias).split( \".\");\r\n                        // if(arrDias[1] == undefined){\r\n                        //     hora = '00'\r\n                        // }else{\r\n                        //     hora = Math.trunc((Number(arrDias[1]) * 24) / 100)\r\n                        //     hora = String(hora)\r\n                        //     if(hora.length > 1 ){\r\n                        //         if(hora.charAt(hora.length-1) == '0'){\r\n                        //             hora.substring(0, hora.length - 1);\r\n                        //             console.log('deu : '+hora )\r\n                        //         }                              \r\n                        //     }\r\n                       \r\n                        // }\r\n                        // hora =  String(hora);\r\n                        // //hora = hora.substring(0, 2);\r\n                        // console.log('3 : '+hora)\r\n                     \r\n\r\n                        if( tempoFormatado[0].length < 2 ){\r\n                            tempoFormatado[0] = '0'+tempoFormatado[0];\r\n                        }\r\n                        if( tempoFormatado[1].length < 2 ){\r\n                            tempoFormatado[1] = '0'+tempoFormatado[1];\r\n                        }\r\n                        if( tempoFormatado[2].length < 2 ){\r\n                            tempoFormatado[2] = '0'+tempoFormatado[2];\r\n                        }\r\n\r\n                        formatado =  tempoFormatado[0]+':'+tempoFormatado[1]+':'+tempoFormatado[2]\r\n                    \r\n                        parada.push({\r\n                            cdPt: paradas.data.paradasGalpao[par].cdInjetora,\r\n                            tempo: formatado,\r\n                            descricao: paradas.data.paradasGalpao[par].dsParada,\r\n                            cor: '#ff0000'\r\n                        });\r\n                    }\r\n\r\n                    for (var ale = 0; ale < alertas.data.alertasGalpao.length;ale++ ){\r\n                        \r\n                        let alertaFormatado = alertas.data.alertasGalpao[ale].tempoAlerta.split(\":\");\r\n                        //console.log('opa : '+alertas.data.alertasGalpao[ale].tempoAlerta)\r\n                        if( alertaFormatado[0].length < 2 ){\r\n                            alertaFormatado[0] = '0'+alertaFormatado[0]\r\n                        }\r\n                        if( alertaFormatado[1].length < 2 ){\r\n                            alertaFormatado[1] = '0'+alertaFormatado[1]\r\n                        }\r\n                        if( alertaFormatado[2].length < 2 ){\r\n                            alertaFormatado[2] = '0'+alertaFormatado[2]\r\n                        }\r\n\r\n                        formatado = alertaFormatado[0]+':'+alertaFormatado[1]+':'+alertaFormatado[2]\r\n                        //console.log('formatado : '+formatado)\r\n                        alerta.push({\r\n                            cdPt: alertas.data.alertasGalpao[ale].cdInjetora,\r\n                            tempo: formatado,\r\n                            descricao: alertas.data.alertasGalpao[ale].dsAlerta,\r\n                            cor: '#ff8b16'\r\n                        });\r\n                        //console.log(alertas.data[ale])\r\n                    }\r\n                    //console.log(\"3\")\r\n\r\n                    pts = pts.concat(parada, alerta);\r\n\r\n                    if(sessionStorage.getItem('maquinasList') != 'null'){   \r\n                    var maquinas = JSON.parse(sessionStorage.getItem('maquinasList'))\r\n                        maquinas.forEach((maquina) => {\r\n                        pts.forEach((pt) =>{\r\n                            if (pt.cdPt == maquina) \r\n                                pts_.push(pt)\r\n                        })\r\n                        });\r\n                        this.info = pts_\r\n                    pts = pts_;\r\n                };      \r\n                console.log(pts)\r\n                // BLOCO DE LÓGICA, QUE FAZ  LOOP DA TABELA\r\n                var itemsPerView = 5;\r\n                var view_atual;\r\n                var view_max = itemsPerView;\r\n                var init = 0;\r\n                view_atual = pts.filter((item, index) => index >= init && index < view_max);\r\n                this.pts = view_atual\r\n                setInterval(() => {\r\n                    view_atual = pts.filter((item, index) => index >= init && index < view_max);\r\n                    view_max += itemsPerView;\r\n                    init += itemsPerView;\r\n                    \r\n                    if(view_atual.length === 0){\r\n                        if(sessionStorage.getItem('produtividade') == 'true'){\r\n                            window.location.href = '/produtividade'\r\n                        }\r\n                        else if(sessionStorage.getItem('maquinas') == 'true'){\r\n                            window.location.href = '/maquinas'\r\n                        }\r\n                        else{\r\n                            window.location.reload();\r\n                        }\r\n                    }else{\r\n                        this.pts = view_atual\r\n                    }\r\n                }, 15000);\r\n                // FIM DO BLOCO\r\n     \r\n              }))\r\n              .catch(error => this.errorF(error));\r\n          }\r\n      },\r\n  \r\n    mounted () {\r\n        this.cd = sessionStorage.getItem('galpao')\r\n        document.title = `Paradas - ${sessionStorage.getItem('galpaoName')}`\r\n        this.getParadas()\r\n    }\r\n  }\r\n</script>\r\n\r\n","import { render } from \"./ParadasView.vue?vue&type=template&id=61e302b4\"\nimport script from \"./ParadasView.vue?vue&type=script&lang=js\"\nexport * from \"./ParadasView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\mathe\\\\Documents\\\\desenvolvimento\\\\injettv-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","$data","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","pt","index","_hoisted_6","style","cor","cdPt","descricao","tempo","_hoisted_7","name","components","created","data","errorF","error","sessionStorage","setItem","window","location","href","ultimaAtualizacao","ip","require","galpaoName","getItem","cd","color","pts","info","turno","maquinas","undefined","legendaColors1","nome","legendaColors2","methods","getToday","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","h","getHours","m","getMinutes","s","getSeconds","length","async","this","axios","params","cdGalpao","then","paradas","alertas","alerta","parada","pts_","formatado","par","paradasGalpao","tempoFormatado","tempoParado","split","push","cdInjetora","dsParada","ale","alertasGalpao","alertaFormatado","tempoAlerta","dsAlerta","concat","JSON","parse","forEach","maquina","console","log","view_atual","itemsPerView","view_max","init","filter","item","setInterval","reload","catch","mounted","document","title","getParadas","__exports__","render"],"sourceRoot":""}